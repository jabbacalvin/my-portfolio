{"version":3,"file":"static/js/325.e575fe9d.chunk.js","mappings":"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","sources":["../node_modules/@emotion/css/create-instance/dist/emotion-css-create-instance.esm.js","../node_modules/@emotion/css/dist/emotion-css.esm.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options); // $FlowFixMe\n\n  cache.sheet.speedy = function (value) {\n    if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    // $FlowFixMe\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport { createEmotion as default };\n","import createEmotion from '../create-instance/dist/emotion-css-create-instance.esm.js';\nimport '@emotion/cache';\nimport '@emotion/serialize';\nimport '@emotion/utils';\n\nvar _createEmotion = createEmotion({\n  key: 'css'\n}),\n    flush = _createEmotion.flush,\n    hydrate = _createEmotion.hydrate,\n    cx = _createEmotion.cx,\n    merge = _createEmotion.merge,\n    getRegisteredStyles = _createEmotion.getRegisteredStyles,\n    injectGlobal = _createEmotion.injectGlobal,\n    keyframes = _createEmotion.keyframes,\n    css = _createEmotion.css,\n    sheet = _createEmotion.sheet,\n    cache = _createEmotion.cache;\n\nexport { cache, css, cx, flush, getRegisteredStyles, hydrate, injectGlobal, keyframes, merge, sheet };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["insertWithoutScoping","cache","serialized","undefined","inserted","name","insert","sheet","merge","registered","css","className","registeredStyles","rawClassName","getRegisteredStyles","length","classnames","args","cls","i","arg","toAdd","Array","isArray","k","_createEmotion","options","createCache","speedy","value","this","isSpeedy","compat","_len","arguments","_key","serializeStyles","insertStyles","key","cx","_len4","_key4","injectGlobal","_len3","_key3","keyframes","_len2","_key2","animation","styles","hydrate","ids","forEach","flush","bind","createEmotion","_objectWithoutProperties","source","excluded","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","_ref","_ref2","_slicedToArray","a","b","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","isEasingArray","reverseEasing","backInOut","mirrorEasing","easingLookup","circInOut","anticipate","p","pow","easingDefinitionToFunction","definition","invariant","_definition","hueToRgb","q","mixLinearColor","from","to","v","fromExpo","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","color","type","find","test","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","_objectSpread","mix","transform","mixImmediate","origin","getMixer","startsWith","mixComplex","mixArray","output","_toConsumableArray","numValues","blendValue","fromThis","mixObject","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","pipe","values","warning","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","interpolate","input","_ref$clamp","clamp","isClamp","inputLength","reverse","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","min","offsetProgress","fillOffset","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","state","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","velocity","_ref$mass","mass","secondsToMilliseconds","dampingRatio","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","resolveSpring","restDelta","restSpeed","_excluded","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","callback","memo","hasOwnProperty","Element","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","element","keyframeOptions","_defineProperty","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","isAnimatable","isNone","isZeroValueString","animateMotionValue","transition","valueTransition","getValueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","get","animatableTemplateValue","noneKeyframeIndexes","getAnimatableNone","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","optimizedAppearDataAttribute","camelToDash","animateTarget","visualElement","_ref2$delay","transitionOverride","_visualElement$makeTa","makeTargetAnimatable","_visualElement$makeTa2","transitionEnd","willChange","getValue","animations","animationTypeState","animationState","getState","_loop","valueTarget","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","window","HandoffAppearAnimations","hasAnimated","appearId","shouldReduceMotion","isWillChangeMotionValue","add","remove","all","setTarget","animateVariant","variant","resolved","resolveVariant","custom","_ref$transition","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","_transition","_transition$delayChil","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","_ref3","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","isKeyframesTarget","acos","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","index","delete","process","createRenderStep","processStep","stepId","processBatch","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","isRefObject","ref","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","canHandoff","useIsomorphicLayoutEffect","render","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","originX","_transformOrigin$orig2","originY","_transformOrigin$orig3","originZ","createHtmlRenderState","copyRawValuesOnly","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","rotateZ","resetValues","setStaticValue","_b","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","clear","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","match","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","getPropertyValue","trimmed","isNumericalString","isCSSVariableToken","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","number","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","filter","positionalValues","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","_ref4","_ref5","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","toType","fromType","findDimensionValueType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","DOMVisualElement","_VisualElement","compareDocumentPosition","getOrigin","checkTargetForNewValues","parsed","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","_get","Reflect","property","receiver","base","object","getPrototypeOf","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","str","replace","checkStringStartsWith","cssVariableRegex","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateZ","perspective","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","getCurrent","currentValues","valueTypes","findValueType","setMotionValue","_ref$transitionEnd","resolveFinalValueInKeyframes","setVariants","variantLabels","getVariant","setValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","transitionOrigin","item","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","parseInt","splitColor","_ref$alpha","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","_v$match","floatRegex","_v$match2","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","unit","functionRegex","functions","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","_info$values","tokenised","originalValue","toString","parseComplexValue","_analyseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}