{"version":3,"file":"static/js/225.5a180ea5.chunk.js","mappings":"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","sources":["../node_modules/@emotion/css/create-instance/dist/emotion-css-create-instance.esm.js","../node_modules/@emotion/css/dist/emotion-css.esm.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options); // $FlowFixMe\n\n  cache.sheet.speedy = function (value) {\n    if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    // $FlowFixMe\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport { createEmotion as default };\n","import createEmotion from '../create-instance/dist/emotion-css-create-instance.esm.js';\nimport '@emotion/cache';\nimport '@emotion/serialize';\nimport '@emotion/utils';\n\nvar _createEmotion = createEmotion({\n  key: 'css'\n}),\n    flush = _createEmotion.flush,\n    hydrate = _createEmotion.hydrate,\n    cx = _createEmotion.cx,\n    merge = _createEmotion.merge,\n    getRegisteredStyles = _createEmotion.getRegisteredStyles,\n    injectGlobal = _createEmotion.injectGlobal,\n    keyframes = _createEmotion.keyframes,\n    css = _createEmotion.css,\n    sheet = _createEmotion.sheet,\n    cache = _createEmotion.cache;\n\nexport { cache, css, cx, flush, getRegisteredStyles, hydrate, injectGlobal, keyframes, merge, sheet };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["insertWithoutScoping","cache","serialized","undefined","inserted","name","insert","sheet","merge","registered","css","className","registeredStyles","rawClassName","getRegisteredStyles","length","classnames","args","cls","i","arg","toAdd","Array","isArray","k","_createEmotion","options","createCache","speedy","value","this","isSpeedy","compat","_len","arguments","_key","serializeStyles","insertStyles","key","cx","_len4","_key4","injectGlobal","_len3","_key3","keyframes","_len2","_key2","animation","styles","hydrate","ids","forEach","flush","bind","createEmotion","_get","Reflect","get","target","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","apply","_objectWithoutProperties","source","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","_ref","_ref2","_slicedToArray","a","b","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","isEasingArray","reverseEasing","backInOut","mirrorEasing","easingLookup","circInOut","anticipate","p","pow","easingDefinitionToFunction","definition","invariant","_definition","values","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","state","done","absoluteTimes","offset","o","convertOffsetToTimes","defaultOffset","mapTimeToKeyframe","interpolate","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","velocity","_ref$mass","mass","warning","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","keys","some","spring","resolveSpring","restDelta","restSpeed","_excluded","origin","_getSpringOptions","springOptions","_objectSpread","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","v","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","_toConsumableArray","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","round","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","callback","memo","Element","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","push","element","keyframeOptions","_defineProperty","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","startsWith","isAnimatable","complex","test","isNone","isZeroValueString","animateMotionValue","transition","valueTransition","getValueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","getAnimatableNone","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","optimizedAppearDataAttribute","camelToDash","animateTarget","visualElement","_ref2$delay","transitionOverride","_visualElement$makeTa","makeTargetAnimatable","_visualElement$makeTa2","transitionEnd","willChange","getValue","animations","animationTypeState","animationState","getState","_loop","valueTarget","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","window","HandoffAppearAnimations","hasAnimated","appearId","shouldReduceMotion","isWillChangeMotionValue","add","remove","all","setTarget","animateVariant","variant","resolved","resolveVariant","custom","_ref$transition","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","_transition","_transition$delayChil","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","_ref3","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","isKeyframesTarget","LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","PresenceContext","acos","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","index","delete","process","createRenderStep","processStep","stepId","processBatch","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","MotionContext","LazyContext","strict","isRefObject","ref","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","canHandoff","useIsomorphicLayoutEffect","render","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","transform","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","originX","_transformOrigin$orig2","originY","_transformOrigin$orig3","originZ","createHtmlRenderState","copyRawValuesOnly","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","pipe","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","mix","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","parse","template","createTransformer","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","output","to","mixAxisDelta","setTargetDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","rotateZ","resetValues","setStaticValue","_b","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","clear","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","match","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","getPropertyValue","trimmed","isNumericalString","isCSSVariableToken","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","number","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","filter","positionalValues","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","_ref4","_ref5","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","toType","fromType","findDimensionValueType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","DOMVisualElement","_VisualElement","compareDocumentPosition","getOrigin","checkTargetForNewValues","parsed","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","str","replace","checkStringStartsWith","cssVariableRegex","defaultValueType","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","find","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateZ","perspective","alpha","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","getCurrent","currentValues","valueTypes","findValueType","setMotionValue","_ref$transitionEnd","resolveFinalValueInKeyframes","setVariants","variantLabels","getVariant","setValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","transitionOrigin","arr","item","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","_ref$clamp","isClamp","inputLength","interpolator","progressInRange","any","remaining","offsetProgress","fillOffset","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","parseInt","splitColor","_ref$alpha","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","_v$match","floatRegex","_v$match2","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","unit","functionRegex","functions","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","_info$values","tokenised","originalValue","toString","parseComplexValue","_analyseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}